#lang planet neil/sicp
(define empty-board nil)
(define (make-queen row col)
  (cons row col))
(define (row queen)
  (car queen))
(define (col queen)
  (cdr queen))
(define (adjoin-position row col board)
  (cons (make-queen row col) board))
(define (safe? k positions);在adjoin-position中是直接把第k个放在了第一位，所以k可以完全不用
  (let ((target-queen (car positions)))
    (define (iter offset remain-positions)
      (let ((neighbor-queen (car remain-positions)))
       (cond ((null? remain-positions) #t)
             ((or (= (row target-queen) (row neighbor-queen))
                  (= (+ (row target-queen) offset) (row neighbor-queen))
                  (= (- (row target-queen) offset) (row neighbor-queen)))
              #f)
             (else (iter (+ offset 1) (cdr remain-positions))))))
    (iter 1 (cdr positions))))