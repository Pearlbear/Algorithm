#lang planet neil/sicp
(define (install-scheme-package)
  (define (equ? x y)
    (equal? x y))
  (put 'equ? '(scheme-number scheme-number)
       equ?)
  'done)

(define (install-rational-package)
  (define (equ? x y)
    (and (equal? (denom x) (denom y))
         (equal? (numer x) (numer y))))
  (put 'equ? '(rational rational)
       equ?)
  'done)

(define (install-rational-package)
  (define (equ? x y)
    (and (equal? (imag-part x) (imag-part y))
         (equal? (real-part x) (real-part y))))
  (put 'equ? '(complex complex)
       equ?)
  'done)
(define (equ? x y)
  (apply-generic 'equ? x y))